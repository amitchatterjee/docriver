extensions:
  zpages:
    endpoint: 0.0.0.0:55679
  basicauth/metrics_backend:
    # https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/extension/basicauthextension
    client_auth:
      username: "${env:DOCRIVER_OTEL_METRICS_EXPORT_ENDPOINT_AUTH_HEADER}"
      password: "${env:DOCRIVER_OTEL_METRICS_EXPORT_ENDPOINT_AUTH_VAL}"

receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318
  prometheus:
    config:
      scrape_configs:
      - job_name: 'otel-collector'
        scrape_interval: 30s
        static_configs:
        - targets: ['cadvisor:8080']

processors:
  batch:
  resourcedetection:
    # Enriches telemetry data with resource information from the host
    # https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/processor/resourcedetectionprocessor
    detectors: ["env", "system"]
    override: false
  transform/drop_unneeded_resource_attributes:
    # https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/processor/transformprocessor
    error_mode: ignore
    trace_statements:
      - context: resource
        statements:
          - delete_key(attributes, "os.description")
          - delete_key(attributes, "os.type")
          - delete_key(attributes, "process.command_args")
          - delete_key(attributes, "process.executable.path")
          - delete_key(attributes, "process.pid")
          - delete_key(attributes, "process.runtime.description")
          - delete_key(attributes, "process.runtime.name")
          - delete_key(attributes, "process.runtime.version")
    metric_statements:
      - context: resource
        statements:
          - delete_key(attributes, "os.description")
          - delete_key(attributes, "os.type")
          - delete_key(attributes, "process.command_args")
          - delete_key(attributes, "process.executable.path")
          - delete_key(attributes, "process.pid")
          - delete_key(attributes, "process.runtime.description")
          - delete_key(attributes, "process.runtime.name")
          - delete_key(attributes, "process.runtime.version")
  transform/add_resource_attributes_as_metric_attributes:
    # https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/processor/transformprocessor
    error_mode: ignore
    metric_statements:
      - context: datapoint
        statements:
          - set(attributes["deployment.environment"], resource.attributes["deployment.environment"])
          - set(attributes["service.version"], resource.attributes["service.version"])

connectors:
  grafanacloud:
    # https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/connector/grafanacloudconnector
    host_identifiers: ["host.name"]

exporters:
  debug:
    verbosity: normal
  otlp/trace_backend:
    endpoint: ${env:DOCRIVER_OTEL_TRACE_EXPORT_ENDPOINT}
    headers:
      # TODO - this is not working, probably because we are using gRPC??
      Authorization: ${env:DOCRIVER_OTEL_TRACE_EXPORT_ENDPOINT_AUTH_VAL}
  otlphttp/metrics_backend:
    # https://github.com/open-telemetry/opentelemetry-collector/tree/main/exporter/otlphttpexporter
    endpoint: "${env:DOCRIVER_OTEL_METRICS_EXPORT_ENDPOINT}"
    auth:
      authenticator: basicauth/metrics_backend

service:
    pipelines:
        traces:
          receivers: [otlp]
          processors: [resourcedetection, transform/drop_unneeded_resource_attributes, batch]
          exporters: [otlp/trace_backend]
        metrics:
          receivers: [otlp, prometheus]
          processors: [resourcedetection, transform/drop_unneeded_resource_attributes, transform/add_resource_attributes_as_metric_attributes, batch]
          exporters: [otlphttp/metrics_backend]
          # exporters: [debug]
        logs:
          receivers: [otlp]
          processors: [batch]
          exporters: [debug]
    extensions: [zpages,  basicauth/metrics_backend]
