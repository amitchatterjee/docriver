#load_module /root/debuild/nginx-1.15.5/debian/debuild-module-lua/nginx-1.15.5/debian/nginx-module-lua/usr/lib/nginx/modules/ngx_http_lua_module.so;

load_module /opt/opentelemetry-webserver-sdk/WebServerModule/Nginx/1.23.1/ngx_http_opentelemetry_module.so;

events {
  worker_connections 60;
}

http {
    include /etc/nginx/conf.d/opentelemetry_module.conf;
    
    upstream gateway {
        zone upstream_dynamic 64k;
        server docriver-gateway:5000;

        # TODO add dynamic balancer - https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/balancer.md
        #balancer_by_lua_block {
        #    local balancer = require "ngx.balancer"
        #
        #    -- well, usually we calculate the peer's host and port
        #    -- according to some balancing policies instead of using
        #    -- hard-coded values like below
        #    local host = "docriver-gateway"
        #    local port = 5000
        #
        #    local ok, err = balancer.set_current_peer(host, port)
        #    if not ok then
        #        ngx.log(ngx.ERR, "failed to set the current peer: ", err)
        #        return ngx.exit(500)
        #    end
        #}
    }

    error_log /dev/stdout info;

    log_format main '$remote_addr - $remote_user [$time_local] '
        '"$request" $status $body_bytes_sent '
        '"$http_referer" "$http_user_agent"';

    access_log /dev/stdout  main;

    # This is the docker environment DNS server
    resolver 127.0.0.11 valid=1s;

    server {
        # listen       80;
        # listen  [::]:80;
        listen 443 ssl;
        ssl_certificate /etc/nginx/certs/docriver-nginx.crt;
        ssl_certificate_key /etc/nginx/certs/docriver-nginx.key;

        server_name  localhost;

        # Enable minio console access from the ingress server ONLY if external access is required
        #location /minio/console/ {
        #    rewrite ^/minio/console/(.*)$ /$1 break;
        #    proxy_set_header Host $http_host;
        #    proxy_set_header X-Real-IP $remote_addr;
        #    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #    proxy_set_header X-Forwarded-Proto $scheme;
        #    proxy_set_header X-NginX-Proxy true;
        #
        #    # This is necessary to pass the correct IP to be hashed
        #    real_ip_header X-Real-IP;
        #
        #    proxy_connect_timeout 300;
        #
        #    # To support websockets in MinIO versions released after January 2023
        #    proxy_http_version 1.1;
        #    proxy_set_header Upgrade $http_upgrade;
        #    proxy_set_header Connection "upgrade";
        #    # Some environments may encounter CORS errors (Kubernetes + Nginx Ingress)
        #    # Uncomment the following line to set the Origin request to an empty string
        #    # proxy_set_header Origin '';
        #
        #    chunked_transfer_encoding off;
        #
        #    proxy_pass http://minio:9001; # This uses the upstream directive definition to load balance
        #}

        location / {
            proxy_request_buffering off;
            # TODO change this to something reasonable
            client_max_body_size 0;
            proxy_pass_header Host;
            proxy_pass_header Authorization;
            proxy_pass https://gateway;
        }
    }
}
